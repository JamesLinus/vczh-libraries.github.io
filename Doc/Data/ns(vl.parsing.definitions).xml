<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::parsing::definitions">
  <Overloads DisplayName="Attribute function">
    <Symbol Key="::vl::parsing::definitions::Attribute(&amp; const WString)" UrlName="vl.parsing.definitions.Attribute(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Class function">
    <Symbol Key="::vl::parsing::definitions::Class(&amp; const WString)" UrlName="vl.parsing.definitions.Class(&amp; const WString)" Doc="false" />
    <Symbol Key="::vl::parsing::definitions::Class(&amp; const WString,&amp; const ParsingDefinitionTypeWriter)" UrlName="vl.parsing.definitions.Class(&amp; const WString,&amp; const ParsingDefinitionTypeWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="CreateParserDefinition function">
    <Symbol Key="::vl::parsing::definitions::CreateParserDefinition()" UrlName="vl.parsing.definitions.CreateParserDefinition()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="DeserializeDefinition function">
    <Symbol Key="::vl::parsing::definitions::DeserializeDefinition(Ptr&lt;ParsingTreeNode&gt;)" UrlName="vl.parsing.definitions.DeserializeDefinition(Ptr{ParsingTreeNode})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="DeserializeString function">
    <Symbol Key="::vl::parsing::definitions::DeserializeString(&amp; const WString)" UrlName="vl.parsing.definitions.DeserializeString(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Enum function">
    <Symbol Key="::vl::parsing::definitions::Enum(&amp; const WString)" UrlName="vl.parsing.definitions.Enum(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="FindAppropriateGrammarState function">
    <Symbol Key="::vl::parsing::definitions::FindAppropriateGrammarState(* ParsingDefinitionGrammar,* ParsingDefinitionGrammar,bool)" UrlName="vl.parsing.definitions.FindAppropriateGrammarState(^ ParsingDefinitionGrammar,^ ParsingDefinitionGrammar,bool)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GrammarStateToString function">
    <Symbol Key="::vl::parsing::definitions::GrammarStateToString(* ParsingDefinitionGrammar,* ParsingDefinitionGrammar,bool)" UrlName="vl.parsing.definitions.GrammarStateToString(^ ParsingDefinitionGrammar,^ ParsingDefinitionGrammar,bool)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GrammarToString function">
    <Symbol Key="::vl::parsing::definitions::GrammarToString(* ParsingDefinitionGrammar)" UrlName="vl.parsing.definitions.GrammarToString(^ ParsingDefinitionGrammar)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Log function">
    <Symbol Key="::vl::parsing::definitions::Log(Ptr&lt;ParsingDefinition&gt;,&amp; stream::TextWriter)" UrlName="vl.parsing.definitions.Log(Ptr{ParsingDefinition},&amp; stream.TextWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Opt function">
    <Symbol Key="::vl::parsing::definitions::Opt(&amp; const ParsingDefinitionGrammarWriter)" UrlName="vl.parsing.definitions.Opt(&amp; const ParsingDefinitionGrammarWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinition" UrlName="vl.parsing.definitions.ParsingDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionAlternativeGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionAlternativeGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionAlternativeGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionArrayType class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionArrayType" UrlName="vl.parsing.definitions.ParsingDefinitionArrayType" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionAssignGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionAssignGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionAssignGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionAttribute class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionAttribute" UrlName="vl.parsing.definitions.ParsingDefinitionAttribute" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionAttributeWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionAttributeWriter" UrlName="vl.parsing.definitions.ParsingDefinitionAttributeWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionBase class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionBase" UrlName="vl.parsing.definitions.ParsingDefinitionBase" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionClassDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionClassDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionClassDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionClassDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionClassDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionClassDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionClassMemberDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionClassMemberDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionClassMemberDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionCreateGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionCreateGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionCreateGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionEnumDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionEnumDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionEnumDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionEnumDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionEnumDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionEnumDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionEnumMemberDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionEnumMemberDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionEnumMemberDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionGrammarWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionGrammarWriter" UrlName="vl.parsing.definitions.ParsingDefinitionGrammarWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionLoopGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionLoopGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionLoopGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionOptionalGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionOptionalGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionOptionalGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionPrimitiveGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionPrimitiveGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionPrimitiveGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionPrimitiveType class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionPrimitiveType" UrlName="vl.parsing.definitions.ParsingDefinitionPrimitiveType" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionRuleDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionRuleDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionRuleDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionRuleDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionRuleDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionRuleDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionSequenceGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionSequenceGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionSequenceGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionSetterGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionSetterGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionSetterGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionSubType class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionSubType" UrlName="vl.parsing.definitions.ParsingDefinitionSubType" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTextGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTextGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionTextGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTokenDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTokenDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionTokenDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTokenDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTokenDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionTokenDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTokenType class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTokenType" UrlName="vl.parsing.definitions.ParsingDefinitionTokenType" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionType class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionType" UrlName="vl.parsing.definitions.ParsingDefinitionType" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTypeDefinition class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTypeDefinition" UrlName="vl.parsing.definitions.ParsingDefinitionTypeDefinition" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTypeDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTypeDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionTypeDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionTypeWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionTypeWriter" UrlName="vl.parsing.definitions.ParsingDefinitionTypeWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionUseGrammar class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionUseGrammar" UrlName="vl.parsing.definitions.ParsingDefinitionUseGrammar" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ParsingDefinitionWriter class">
    <Symbol Key="::vl::parsing::definitions::ParsingDefinitionWriter" UrlName="vl.parsing.definitions.ParsingDefinitionWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Rule function">
    <Symbol Key="::vl::parsing::definitions::Rule(&amp; const WString)" UrlName="vl.parsing.definitions.Rule(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="SerializeString function">
    <Symbol Key="::vl::parsing::definitions::SerializeString(&amp; const WString)" UrlName="vl.parsing.definitions.SerializeString(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Text function">
    <Symbol Key="::vl::parsing::definitions::Text(&amp; const WString)" UrlName="vl.parsing.definitions.Text(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="TokenType function">
    <Symbol Key="::vl::parsing::definitions::TokenType()" UrlName="vl.parsing.definitions.TokenType()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Type function">
    <Symbol Key="::vl::parsing::definitions::Type(&amp; const WString)" UrlName="vl.parsing.definitions.Type(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="TypeToString function">
    <Symbol Key="::vl::parsing::definitions::TypeToString(* ParsingDefinitionType)" UrlName="vl.parsing.definitions.TypeToString(^ ParsingDefinitionType)" Doc="false" />
  </Overloads>
</Namespace>