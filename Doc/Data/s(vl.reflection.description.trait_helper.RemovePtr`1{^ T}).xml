<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::trait_helper::T" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T" />
    </TypeParameters>
    <Specialization>
      <DecorateTypeDecl Decoration="Pointer">
        <Element>
          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
            <ReferencingOverloadKeys>
              <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{^ T}" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Element>
      </DecorateTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="RemovePtr" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;" ClassType="Struct">
        <Children>
          <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr::Type" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::Type">
            <Type>
              <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{^ T}" />
                </ReferencingOverloadKeys>
              </RefTypeDecl>
            </Type>
          </TypedefDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>