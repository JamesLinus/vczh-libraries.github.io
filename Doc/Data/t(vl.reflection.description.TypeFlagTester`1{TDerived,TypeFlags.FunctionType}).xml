<?xml version="1.0" encoding="utf-8"?>
<SymbolTree NamespaceUrlName="vl.reflection.description">
  <SymbolParentMapping>
    <Map From="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Inherit`1(* const Func&lt;T&gt;)::T" To="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Inherit`1(* const Func&lt;T&gt;)" />
    <Map From="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::TDerived" To="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;" />
  </SymbolParentMapping>
  <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;" DisplayName="TypeFlagTester struct" Doc="false">
    <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Inherit`1(* const Func&lt;T&gt;)" DisplayName="Inherit function" Doc="false" />
    <Overloads DisplayName="Inherit method">
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Inherit(* void)" DisplayName="Inherit method" Doc="false" />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Inherit(* const void)" DisplayName="Inherit method" Doc="false" />
    </Overloads>
    <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeFlagTester`1&lt;TDerived,TypeFlags::FunctionType&gt;::Result" DisplayName="Result field" Doc="false" />
  </Symbol>
</SymbolTree>