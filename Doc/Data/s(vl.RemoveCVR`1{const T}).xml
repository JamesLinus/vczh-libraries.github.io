<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::RemoveCVR`1&lt;const T&gt;::T" />
    </TypeParameters>
    <Specialization>
      <DecorateTypeDecl Decoration="Const">
        <Element>
          <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
            <ReferencingOverloadKeys>
              <Key Value="::vl::RemoveCVR`1&lt;const T&gt;::T@s:vl.RemoveCVR`1{const T}" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Element>
      </DecorateTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="RemoveCVR" Tags="x64, Windows;x86, Windows" NameKey="::vl::RemoveCVR" OverloadKey="::vl::RemoveCVR`1&lt;const T&gt;" ClassType="Struct">
        <Children>
          <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::RemoveCVR::Type" OverloadKey="::vl::RemoveCVR`1&lt;const T&gt;::Type">
            <Type>
              <SubTypeDecl ReferencingNameKey="::vl::RemoveCVR::Type" Name="Type">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::RemoveCVR`1::Type@s:vl.RemoveCVR`1" />
                  <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp; T}" />
                  <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                  <Key Value="::vl::RemoveCVR`1&lt;const T&gt;::Type@s:vl.RemoveCVR`1{const T}" />
                  <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;::Type@s:vl.RemoveCVR`1{volatile T}" />
                </ReferencingOverloadKeys>
                <Parent>
                  <GenericTypeDecl>
                    <Element>
                      <RefTypeDecl ReferencingNameKey="::vl::RemoveCVR" Name="RemoveCVR">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::RemoveCVR`1@s:vl.RemoveCVR`1" />
                          <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;@s:vl.RemoveCVR`1{&amp; T}" />
                          <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                          <Key Value="::vl::RemoveCVR`1&lt;const T&gt;@s:vl.RemoveCVR`1{const T}" />
                          <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;@s:vl.RemoveCVR`1{volatile T}" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Element>
                    <TypeArguments>
                      <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::RemoveCVR`1&lt;const T&gt;::T@s:vl.RemoveCVR`1{const T}" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </TypeArguments>
                  </GenericTypeDecl>
                </Parent>
              </SubTypeDecl>
            </Type>
          </TypedefDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>