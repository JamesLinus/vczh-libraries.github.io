<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T" />
    </TypeParameters>
    <Specialization>
      <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
        <ReferencingOverloadKeys>
          <Key Value="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T@s:vl.reflection.description.ParameterAccessor`1{T,TypeFlags.ReadonlyDictionaryType}" />
        </ReferencingOverloadKeys>
      </RefTypeDecl>
      <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::ReadonlyDictionaryType" Name="ReadonlyDictionaryType">
        <ReferencingOverloadKeys>
          <Key Value="::vl::reflection::description::TypeFlags::ReadonlyDictionaryType@s:vl.reflection.description.TypeFlags" />
        </ReferencingOverloadKeys>
        <Parent>
          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
            <ReferencingOverloadKeys>
              <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Parent>
      </SubTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="ParameterAccessor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;" ClassType="Struct">
        <Children>
          <FuncDecl Access="Public" Name="BoxParameter" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::BoxParameter" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::BoxParameter(&amp; T,* ITypeDescriptor)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="object" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::BoxParameter::object" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::BoxParameter(&amp; T,* ITypeDescriptor)::object" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T@s:vl.reflection.description.ParameterAccessor`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::BoxParameter::typeDescriptor" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::BoxParameter(&amp; T,* ITypeDescriptor)::typeDescriptor" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="Pointer">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
          <FuncDecl Access="Public" Name="UnboxParameter" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::UnboxParameter" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UnboxParameter(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl Name="void" />
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::UnboxParameter::value" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UnboxParameter(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::value" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::UnboxParameter::result" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UnboxParameter(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::result" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T@s:vl.reflection.description.ParameterAccessor`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::UnboxParameter::typeDescriptor" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UnboxParameter(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="Pointer">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="valueName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ParameterAccessor::UnboxParameter::valueName" OverloadKey="::vl::reflection::description::ParameterAccessor`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UnboxParameter(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::valueName" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::WString@s:vl.WString" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>