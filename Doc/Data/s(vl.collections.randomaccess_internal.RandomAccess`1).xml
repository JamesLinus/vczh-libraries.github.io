<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::T" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::T" />
    </TypeParameters>
    <Specialization />
    <Element>
      <ClassDecl Access="Public" Name="RandomAccess" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1" ClassType="Struct">
        <Children>
          <FuncDecl Access="Public" Name="GetCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::GetCount" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::GetCount(&amp; const T)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::vint@s:vl.vint" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="t" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::GetCount::t" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::GetCount(&amp; const T)::t" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
          <FuncDecl Access="Public" Name="GetValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::GetValue" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::GetValue(&amp; const T,vint)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <DecorateTypeDecl Decoration="LeftRef">
                    <Element>
                      <DecorateTypeDecl Decoration="Const">
                        <Element>
                          <SubTypeDecl Name="ElementType">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::IEnumerator`1::ElementType@s:vl.collections.IEnumerator`1" />
                              <Key Value="::vl::collections::IEnumerable`1::ElementType@s:vl.collections.IEnumerable`1" />
                              <Key Value="::vl::reflection::description::ValueEnumeratorWrapper`1::ElementType@s:vl.reflection.description.ValueEnumeratorWrapper`1" />
                              <Key Value="::vl::reflection::description::ValueEnumerableWrapper`1::ElementType@s:vl.reflection.description.ValueEnumerableWrapper`1" />
                              <Key Value="::vl::reflection::description::ValueReadonlyListWrapper`1::ElementType@s:vl.reflection.description.ValueReadonlyListWrapper`1" />
                              <Key Value="::vl::reflection::description::ValueListWrapper`1::ElementType@s:vl.reflection.description.ValueListWrapper`1" />
                            </ReferencingOverloadKeys>
                            <Parent>
                              <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Parent>
                          </SubTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="t" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::GetValue::t" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::GetValue(&amp; const T,vint)::t" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::GetValue::index" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::GetValue(&amp; const T,vint)::index" Static="False">
                    <Type>
                      <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::vint@s:vl.vint" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
          <FuncDecl Access="Public" Name="SetCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetCount" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetCount(&amp; T,vint)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl Name="void" />
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="t" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetCount::t" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetCount(&amp; T,vint)::t" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetCount::count" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetCount(&amp; T,vint)::count" Static="False">
                    <Type>
                      <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::vint@s:vl.vint" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
          <FuncDecl Access="Public" Name="SetValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetValue" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetValue(&amp; T,vint,&amp; const T::ElementType)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl Name="void" />
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="t" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetValue::t" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetValue(&amp; T,vint,&amp; const T::ElementType)::t" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetValue::index" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetValue(&amp; T,vint,&amp; const T::ElementType)::index" Static="False">
                    <Type>
                      <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::vint@s:vl.vint" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::SetValue::value" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::SetValue(&amp; T,vint,&amp; const T::ElementType)::value" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <SubTypeDecl Name="ElementType">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::IEnumerator`1::ElementType@s:vl.collections.IEnumerator`1" />
                                  <Key Value="::vl::collections::IEnumerable`1::ElementType@s:vl.collections.IEnumerable`1" />
                                  <Key Value="::vl::reflection::description::ValueEnumeratorWrapper`1::ElementType@s:vl.reflection.description.ValueEnumeratorWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueEnumerableWrapper`1::ElementType@s:vl.reflection.description.ValueEnumerableWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueReadonlyListWrapper`1::ElementType@s:vl.reflection.description.ValueReadonlyListWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueListWrapper`1::ElementType@s:vl.reflection.description.ValueListWrapper`1" />
                                </ReferencingOverloadKeys>
                                <Parent>
                                  <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                                    <ReferencingOverloadKeys>
                                      <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                                    </ReferencingOverloadKeys>
                                  </RefTypeDecl>
                                </Parent>
                              </SubTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
          <FuncDecl Access="Public" Name="AppendValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::AppendValue" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::AppendValue(&amp; T,&amp; const T::ElementType)" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl Name="void" />
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Name="t" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::AppendValue::t" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::AppendValue(&amp; T,&amp; const T::ElementType)::t" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                  <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccess::AppendValue::value" OverloadKey="::vl::collections::randomaccess_internal::RandomAccess`1::AppendValue(&amp; T,&amp; const T::ElementType)::value" Static="False">
                    <Type>
                      <DecorateTypeDecl Decoration="LeftRef">
                        <Element>
                          <DecorateTypeDecl Decoration="Const">
                            <Element>
                              <SubTypeDecl Name="ElementType">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::IEnumerator`1::ElementType@s:vl.collections.IEnumerator`1" />
                                  <Key Value="::vl::collections::IEnumerable`1::ElementType@s:vl.collections.IEnumerable`1" />
                                  <Key Value="::vl::reflection::description::ValueEnumeratorWrapper`1::ElementType@s:vl.reflection.description.ValueEnumeratorWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueEnumerableWrapper`1::ElementType@s:vl.reflection.description.ValueEnumerableWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueReadonlyListWrapper`1::ElementType@s:vl.reflection.description.ValueReadonlyListWrapper`1" />
                                  <Key Value="::vl::reflection::description::ValueListWrapper`1::ElementType@s:vl.reflection.description.ValueListWrapper`1" />
                                </ReferencingOverloadKeys>
                                <Parent>
                                  <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
                                    <ReferencingOverloadKeys>
                                      <Key Value="::vl::collections::randomaccess_internal::RandomAccess`1::T@s:vl.collections.randomaccess_internal.RandomAccess`1" />
                                    </ReferencingOverloadKeys>
                                  </RefTypeDecl>
                                </Parent>
                              </SubTypeDecl>
                            </Element>
                          </DecorateTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>