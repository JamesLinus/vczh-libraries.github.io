<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <FuncDecl Access="Public" Name="WfPrint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfPrint" OverloadKey="::vl::workflow::WfPrint(Ptr&lt;WfExpression&gt;,&amp; const WString,&amp; stream::TextWriter)" Virtual="Normal" Function="Function">
    <Document>&lt;Document&gt;
  &lt;summary&gt;Print a Workflow expression.&lt;/summary&gt;
  &lt;param name="node"&gt;The Workflow expression.&lt;/param&gt;
  &lt;param name="indent"&gt;The indentation.&lt;/param&gt;
  &lt;param name="writer"&gt;The target writer.&lt;/param&gt;
&lt;/Document&gt;</Document>
    <Type>
      <FunctionTypeDecl CallingConvention="Default" Const="False">
        <ReturnType>
          <RefTypeDecl Name="void" />
        </ReturnType>
        <Parameters>
          <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfPrint::node" OverloadKey="::vl::workflow::WfPrint(Ptr&lt;WfExpression&gt;,&amp; const WString,&amp; stream::TextWriter)::node" Static="False">
            <Type>
              <GenericTypeDecl>
                <Element>
                  <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </Element>
                <TypeArguments>
                  <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </TypeArguments>
              </GenericTypeDecl>
            </Type>
          </VarDecl>
          <VarDecl Access="Public" Name="indent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfPrint::indent" OverloadKey="::vl::workflow::WfPrint(Ptr&lt;WfExpression&gt;,&amp; const WString,&amp; stream::TextWriter)::indent" Static="False">
            <Type>
              <DecorateTypeDecl Decoration="LeftRef">
                <Element>
                  <DecorateTypeDecl Decoration="Const">
                    <Element>
                      <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::WString@s:vl.WString" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </Element>
              </DecorateTypeDecl>
            </Type>
          </VarDecl>
          <VarDecl Access="Public" Name="writer" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfPrint::writer" OverloadKey="::vl::workflow::WfPrint(Ptr&lt;WfExpression&gt;,&amp; const WString,&amp; stream::TextWriter)::writer" Static="False">
            <Type>
              <DecorateTypeDecl Decoration="LeftRef">
                <Element>
                  <SubTypeDecl ReferencingNameKey="::vl::stream::TextWriter" Name="TextWriter">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::stream::TextWriter@s:vl.stream.TextWriter" />
                    </ReferencingOverloadKeys>
                    <Parent>
                      <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::stream@ns:vl.stream" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Parent>
                  </SubTypeDecl>
                </Element>
              </DecorateTypeDecl>
            </Type>
          </VarDecl>
        </Parameters>
      </FunctionTypeDecl>
    </Type>
  </FuncDecl>
</Symbols>