<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::parsing::xml">
  <Overloads DisplayName="XmlAttribute class">
    <Symbol Key="::vl::parsing::xml::XmlAttribute" UrlName="vl.parsing.xml.XmlAttribute" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlCData class">
    <Symbol Key="::vl::parsing::xml::XmlCData" UrlName="vl.parsing.xml.XmlCData" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlComment class">
    <Symbol Key="::vl::parsing::xml::XmlComment" UrlName="vl.parsing.xml.XmlComment" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlConvertParsingTreeNode function">
    <Symbol Key="::vl::parsing::xml::XmlConvertParsingTreeNode(vl::Ptr&lt;vl::parsing::ParsingTreeNode&gt;,&amp; const vl::collections::List&lt;vl::regex::RegexToken&gt;)" UrlName="vl.parsing.xml.XmlConvertParsingTreeNode(vl.Ptr{vl.parsing.ParsingTreeNode},&amp; const vl.collections.List{vl.regex.RegexToken})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlDocument class">
    <Symbol Key="::vl::parsing::xml::XmlDocument" UrlName="vl.parsing.xml.XmlDocument" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlElement class">
    <Symbol Key="::vl::parsing::xml::XmlElement" UrlName="vl.parsing.xml.XmlElement" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlElementWriter class">
    <Symbol Key="::vl::parsing::xml::XmlElementWriter" UrlName="vl.parsing.xml.XmlElementWriter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlEscapeCData function">
    <Symbol Key="::vl::parsing::xml::XmlEscapeCData(&amp; const WString)" UrlName="vl.parsing.xml.XmlEscapeCData(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlEscapeComment function">
    <Symbol Key="::vl::parsing::xml::XmlEscapeComment(&amp; const WString)" UrlName="vl.parsing.xml.XmlEscapeComment(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlEscapeValue function">
    <Symbol Key="::vl::parsing::xml::XmlEscapeValue(&amp; const WString)" UrlName="vl.parsing.xml.XmlEscapeValue(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlGetAttribute function">
    <Symbol Key="::vl::parsing::xml::XmlGetAttribute(Ptr&lt;XmlElement&gt;,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetAttribute(Ptr{XmlElement},&amp; const WString)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetAttribute(* XmlElement,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetAttribute(^ XmlElement,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlGetElement function">
    <Symbol Key="::vl::parsing::xml::XmlGetElement(Ptr&lt;XmlElement&gt;,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetElement(Ptr{XmlElement},&amp; const WString)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetElement(* XmlElement,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetElement(^ XmlElement,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlGetElements function">
    <Symbol Key="::vl::parsing::xml::XmlGetElements(Ptr&lt;XmlElement&gt;)" UrlName="vl.parsing.xml.XmlGetElements(Ptr{XmlElement})" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetElements(Ptr&lt;XmlElement&gt;,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetElements(Ptr{XmlElement},&amp; const WString)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetElements(* XmlElement)" UrlName="vl.parsing.xml.XmlGetElements(^ XmlElement)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetElements(* XmlElement,&amp; const WString)" UrlName="vl.parsing.xml.XmlGetElements(^ XmlElement,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlGetParserTextBuffer function">
    <Symbol Key="::vl::parsing::xml::XmlGetParserTextBuffer()" UrlName="vl.parsing.xml.XmlGetParserTextBuffer()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlGetValue function">
    <Symbol Key="::vl::parsing::xml::XmlGetValue(Ptr&lt;XmlElement&gt;)" UrlName="vl.parsing.xml.XmlGetValue(Ptr{XmlElement})" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlGetValue(* XmlElement)" UrlName="vl.parsing.xml.XmlGetValue(^ XmlElement)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlInstruction class">
    <Symbol Key="::vl::parsing::xml::XmlInstruction" UrlName="vl.parsing.xml.XmlInstruction" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlLoadTable function">
    <Symbol Key="::vl::parsing::xml::XmlLoadTable()" UrlName="vl.parsing.xml.XmlLoadTable()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlNode class">
    <Symbol Key="::vl::parsing::xml::XmlNode" UrlName="vl.parsing.xml.XmlNode" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlParseDocument function">
    <Symbol Key="::vl::parsing::xml::XmlParseDocument(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseDocument(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlParseDocument(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseDocument(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlParseDocumentAsParsingTreeNode function">
    <Symbol Key="::vl::parsing::xml::XmlParseDocumentAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseDocumentAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlParseDocumentAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseDocumentAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlParseElement function">
    <Symbol Key="::vl::parsing::xml::XmlParseElement(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseElement(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlParseElement(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseElement(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlParseElementAsParsingTreeNode function">
    <Symbol Key="::vl::parsing::xml::XmlParseElementAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseElementAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::parsing::xml::XmlParseElementAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.parsing.xml.XmlParseElementAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlParserTokenIndex enum">
    <Symbol Key="::vl::parsing::xml::XmlParserTokenIndex" UrlName="vl.parsing.xml.XmlParserTokenIndex" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlPrint function">
    <Symbol Key="::vl::parsing::xml::XmlPrint(Ptr&lt;XmlNode&gt;,&amp; stream::TextWriter)" UrlName="vl.parsing.xml.XmlPrint(Ptr{XmlNode},&amp; stream.TextWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlPrintContent function">
    <Symbol Key="::vl::parsing::xml::XmlPrintContent(Ptr&lt;XmlElement&gt;,&amp; stream::TextWriter)" UrlName="vl.parsing.xml.XmlPrintContent(Ptr{XmlElement},&amp; stream.TextWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlText class">
    <Symbol Key="::vl::parsing::xml::XmlText" UrlName="vl.parsing.xml.XmlText" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlToString function">
    <Symbol Key="::vl::parsing::xml::XmlToString(Ptr&lt;XmlNode&gt;)" UrlName="vl.parsing.xml.XmlToString(Ptr{XmlNode})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlUnescapeCData function">
    <Symbol Key="::vl::parsing::xml::XmlUnescapeCData(&amp; const WString)" UrlName="vl.parsing.xml.XmlUnescapeCData(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlUnescapeComment function">
    <Symbol Key="::vl::parsing::xml::XmlUnescapeComment(&amp; const WString)" UrlName="vl.parsing.xml.XmlUnescapeComment(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="XmlUnescapeValue function">
    <Symbol Key="::vl::parsing::xml::XmlUnescapeValue(&amp; const WString)" UrlName="vl.parsing.xml.XmlUnescapeValue(&amp; const WString)" Doc="false" />
  </Overloads>
</Namespace>