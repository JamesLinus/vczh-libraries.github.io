<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="Ds" Tags="x86, Windows" NameKey="::vl::collections::Ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::Ds" />
      <TypeParameterDecl Access="Public" Name="S" Tags="x86, Windows" NameKey="::vl::collections::S" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::S" />
    </TypeParameters>
    <Specialization />
    <Element>
      <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)" Virtual="Normal" Function="Function">
        <Type>
          <FunctionTypeDecl CallingConvention="Default" Const="False">
            <ReturnType>
              <RefTypeDecl Name="void" />
            </ReturnType>
            <Parameters>
              <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::ds" Static="False">
                <Type>
                  <DecorateTypeDecl Decoration="LeftRef">
                    <Element>
                      <RefTypeDecl ReferencingNameKey="::vl::collections::Ds" Name="Ds">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::Ds@s:vl.collections.CopyFrom`2(&amp; Ds,&amp; const ObjectString{S},bool)" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </Type>
              </VarDecl>
              <VarDecl Access="Public" Name="ss" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::ss" Static="False">
                <Type>
                  <DecorateTypeDecl Decoration="LeftRef">
                    <Element>
                      <DecorateTypeDecl Decoration="Const">
                        <Element>
                          <GenericTypeDecl>
                            <Element>
                              <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </Element>
                            <TypeArguments>
                              <RefTypeDecl ReferencingNameKey="::vl::collections::S" Name="S">
                                <ReferencingOverloadKeys>
                                  <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::S@s:vl.collections.CopyFrom`2(&amp; Ds,&amp; const ObjectString{S},bool)" />
                                </ReferencingOverloadKeys>
                              </RefTypeDecl>
                            </TypeArguments>
                          </GenericTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </Type>
              </VarDecl>
              <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::append" Static="False">
                <Type>
                  <RefTypeDecl Name="bool" />
                </Type>
              </VarDecl>
            </Parameters>
          </FunctionTypeDecl>
        </Type>
      </FuncDecl>
    </Element>
  </TemplateDecl>
</Symbols>