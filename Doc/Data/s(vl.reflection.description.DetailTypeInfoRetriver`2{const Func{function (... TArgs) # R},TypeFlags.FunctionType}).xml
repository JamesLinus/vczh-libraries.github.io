<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::reflection::description::R" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R" />
      <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::TArgs" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs" />
    </TypeParameters>
    <Specialization>
      <DecorateTypeDecl Decoration="Const">
        <Element>
          <GenericTypeDecl>
            <Element>
              <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::Func`1@s:vl.Func`1" />
                  <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                </ReferencingOverloadKeys>
              </RefTypeDecl>
            </Element>
            <TypeArguments>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </ReturnType>
                <Parameters>
                  <VarDecl Access="Public" Static="False">
                    <Type>
                      <VariadicArgumentTypeDecl>
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </VariadicArgumentTypeDecl>
                    </Type>
                  </VarDecl>
                </Parameters>
              </FunctionTypeDecl>
            </TypeArguments>
          </GenericTypeDecl>
        </Element>
      </DecorateTypeDecl>
      <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::FunctionType" Name="FunctionType">
        <ReferencingOverloadKeys>
          <Key Value="::vl::reflection::description::TypeFlags::FunctionType@s:vl.reflection.description.TypeFlags" />
        </ReferencingOverloadKeys>
        <Parent>
          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
            <ReferencingOverloadKeys>
              <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Parent>
      </SubTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;" ClassType="Struct">
        <BaseTypes>
          <BaseTypeDecl Access="Public" Tags="x86, Windows">
            <Type>
              <GenericTypeDecl>
                <Element>
                  <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </Element>
                <TypeArguments>
                  <GenericTypeDecl>
                    <Element>
                      <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::Func`1@s:vl.Func`1" />
                          <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Element>
                    <TypeArguments>
                      <FunctionTypeDecl CallingConvention="Default" Const="False">
                        <ReturnType>
                          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </ReturnType>
                        <Parameters>
                          <VarDecl Access="Public" Static="False">
                            <Type>
                              <VariadicArgumentTypeDecl>
                                <Element>
                                  <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                                    <ReferencingOverloadKeys>
                                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                                    </ReferencingOverloadKeys>
                                  </RefTypeDecl>
                                </Element>
                              </VariadicArgumentTypeDecl>
                            </Type>
                          </VarDecl>
                        </Parameters>
                      </FunctionTypeDecl>
                    </TypeArguments>
                  </GenericTypeDecl>
                  <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::FunctionType" Name="FunctionType">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::TypeFlags::FunctionType@s:vl.reflection.description.TypeFlags" />
                    </ReferencingOverloadKeys>
                    <Parent>
                      <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Parent>
                  </SubTypeDecl>
                </TypeArguments>
              </GenericTypeDecl>
            </Type>
          </BaseTypeDecl>
        </BaseTypes>
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>