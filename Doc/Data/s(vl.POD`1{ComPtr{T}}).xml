<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::POD`1&lt;ComPtr&lt;T&gt;&gt;::T" />
    </TypeParameters>
    <Specialization>
      <GenericTypeDecl>
        <Element>
          <RefTypeDecl ReferencingNameKey="::vl::ComPtr" Name="ComPtr">
            <ReferencingOverloadKeys>
              <Key Value="::vl::ComPtr`1@s:vl.ComPtr`1" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Element>
        <TypeArguments>
          <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
            <ReferencingOverloadKeys>
              <Key Value="::vl::POD`1&lt;ComPtr&lt;T&gt;&gt;::T@s:vl.POD`1{ComPtr{T}}" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </TypeArguments>
      </GenericTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="POD" Tags="x64, Windows;x86, Windows" NameKey="::vl::POD" OverloadKey="::vl::POD`1&lt;ComPtr&lt;T&gt;&gt;" ClassType="Struct">
        <Children>
          <VarDecl Access="Public" Name="Result" Tags="x64, Windows;x86, Windows" NameKey="::vl::POD::Result" OverloadKey="::vl::POD`1&lt;ComPtr&lt;T&gt;&gt;::Result" Static="True">
            <Type>
              <DecorateTypeDecl Decoration="Const">
                <Element>
                  <RefTypeDecl Name="bool" />
                </Element>
              </DecorateTypeDecl>
            </Type>
          </VarDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>