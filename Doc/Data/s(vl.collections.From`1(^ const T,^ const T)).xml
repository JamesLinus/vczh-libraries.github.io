<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::T" OverloadKey="::vl::collections::From`1(* const T,* const T)::T" />
    </TypeParameters>
    <Specialization />
    <Element>
      <FuncDecl Access="Public" Name="From" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::From" OverloadKey="::vl::collections::From`1(* const T,* const T)" Virtual="Normal" Function="Function">
        <Type>
          <FunctionTypeDecl CallingConvention="Default" Const="False">
            <ReturnType>
              <GenericTypeDecl>
                <Element>
                  <RefTypeDecl ReferencingNameKey="::vl::collections::LazyList" Name="LazyList">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::collections::LazyList`1@s:vl.collections.LazyList`1" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </Element>
                <TypeArguments>
                  <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::collections::From`1(* const T,* const T)::T@s:vl.collections.From`1(^ const T,^ const T)" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </TypeArguments>
              </GenericTypeDecl>
            </ReturnType>
            <Parameters>
              <VarDecl Access="Public" Name="begin" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::From::begin" OverloadKey="::vl::collections::From`1(* const T,* const T)::begin" Static="False">
                <Type>
                  <DecorateTypeDecl Decoration="Pointer">
                    <Element>
                      <DecorateTypeDecl Decoration="Const">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::From`1(* const T,* const T)::T@s:vl.collections.From`1(^ const T,^ const T)" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </Type>
              </VarDecl>
              <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::From::end" OverloadKey="::vl::collections::From`1(* const T,* const T)::end" Static="False">
                <Type>
                  <DecorateTypeDecl Decoration="Pointer">
                    <Element>
                      <DecorateTypeDecl Decoration="Const">
                        <Element>
                          <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                            <ReferencingOverloadKeys>
                              <Key Value="::vl::collections::From`1(* const T,* const T)::T@s:vl.collections.From`1(^ const T,^ const T)" />
                            </ReferencingOverloadKeys>
                          </RefTypeDecl>
                        </Element>
                      </DecorateTypeDecl>
                    </Element>
                  </DecorateTypeDecl>
                </Type>
              </VarDecl>
            </Parameters>
          </FunctionTypeDecl>
        </Type>
      </FuncDecl>
    </Element>
  </TemplateDecl>
</Symbols>