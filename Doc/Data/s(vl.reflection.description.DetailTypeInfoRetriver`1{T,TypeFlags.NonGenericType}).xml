<?xml version="1.0" encoding="utf-8"?>
<Symbols>
  <TemplateDecl Access="Public" Tags="x86, Windows">
    <TypeParameters>
      <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T" />
    </TypeParameters>
    <Specialization>
      <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
        <ReferencingOverloadKeys>
          <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
        </ReferencingOverloadKeys>
      </RefTypeDecl>
      <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
        <ReferencingOverloadKeys>
          <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
        </ReferencingOverloadKeys>
        <Parent>
          <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
            <ReferencingOverloadKeys>
              <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
            </ReferencingOverloadKeys>
          </RefTypeDecl>
        </Parent>
      </SubTypeDecl>
    </Specialization>
    <Element>
      <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
        <Children>
          <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
            <Type>
              <DecorateTypeDecl Decoration="Const">
                <Element>
                  <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                    </ReferencingOverloadKeys>
                    <Parent>
                      <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Parent>
                  </SubTypeDecl>
                </Element>
              </DecorateTypeDecl>
            </Type>
          </VarDecl>
          <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type">
            <Type>
              <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                </ReferencingOverloadKeys>
              </RefTypeDecl>
            </Type>
          </TypedefDecl>
          <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType">
            <Type>
              <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                </ReferencingOverloadKeys>
              </RefTypeDecl>
            </Type>
          </TypedefDecl>
          <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
            <Type>
              <DecorateTypeDecl Decoration="LeftRef">
                <Element>
                  <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                    <ReferencingOverloadKeys>
                      <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    </ReferencingOverloadKeys>
                  </RefTypeDecl>
                </Element>
              </DecorateTypeDecl>
            </Type>
          </TypedefDecl>
          <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
            <Type>
              <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                <ReferencingOverloadKeys>
                  <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                </ReferencingOverloadKeys>
              </RefTypeDecl>
            </Type>
          </TypedefDecl>
          <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::CreateTypeInfo()" Virtual="Static" Function="Function">
            <Type>
              <FunctionTypeDecl CallingConvention="Default" Const="False">
                <ReturnType>
                  <GenericTypeDecl>
                    <Element>
                      <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </Element>
                    <TypeArguments>
                      <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                        <ReferencingOverloadKeys>
                          <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                        </ReferencingOverloadKeys>
                      </RefTypeDecl>
                    </TypeArguments>
                  </GenericTypeDecl>
                </ReturnType>
                <Parameters />
              </FunctionTypeDecl>
            </Type>
          </FuncDecl>
        </Children>
        <BaseTypes />
      </ClassDecl>
    </Element>
  </TemplateDecl>
</Symbols>